syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
        rpc store_file(stream  file_stream) returns (file_response);
    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
        rpc fetch_file(file_request) returns (stream file_stream);
    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server
        rpc delete_file(file_request) returns (file_response);
    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server
        rpc list_file(empty) returns (stream file_list);
        // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
        rpc stat_file(file_request) returns (file_response);
        // 7. Any other methods you deem necessary to complete the tasks of this assignment


}

// Add your message types here

message file_stream{
        string file_name = 1;
        bytes file_stats = 2;
        bytes file_data = 3;
};

message file_request{
        string file_name = 1;
};

message file_response{
        string file_name = 1;
        int32 file_transfer_status = 2;
        bytes file_stats = 3;
};

message file_list{
        bytes files = 1;
}

message empty {

}